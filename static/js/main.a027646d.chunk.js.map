{"version":3,"sources":["components/Display_que.js","components/User_welcome.js","App.js","reportWebVitals.js","index.js"],"names":["Display_que","username","useState","wrong","setWrong","count","setCount","right","setRight","value","setValue","result","setResult","againShow","setAgainShow","quiz_que","Math","floor","random","length","randQue","setRandQue","id","className","src","image","options","map","obt","index","onClick","ans","prevState","date","slice","User_welcome","userName","setUserName","content","setContent","showQue","setShowQue","disableInput","setDisableInput","useEffect","items","objValues","i","randomElement","indexOf","push","type","onChange","e","target","placeholder","today","Date","now","axios","post","then","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a027646d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport quiz_que from \"./quiz_que.json\";\n\nexport default function Display_que(username) {\n  const [wrong, setWrong] = useState(0);\n  const [count, setCount] = useState(0);\n  const [right, setRight] = useState(0);\n  const [value, setValue] = useState(false);\n  const [result, setResult] = useState(false);\n  const [againShow, setAgainShow] = useState(false);\n \n  const [randQue, setRandQue] = useState(\n    quiz_que[Math.floor(Math.random() * quiz_que.length)]\n  );\n\n  const obt_func = (id, ans) => {\n    if (count < 5) {\n      if (ans === id + 1) {\n        setCount(count + 1);\n        setRight(right + 1);\n        setRandQue(quiz_que[Math.floor(Math.random() * quiz_que.length)]);\n        setValue(false);\n      } else {\n        setRandQue((prevState) => {\n          setValue(true);\n          setWrong(wrong + 1);\n          return prevState === randQue\n            ? prevState\n            : quiz_que[Math.floor(Math.random() * quiz_que.length)];\n        });\n      }\n    } else {\n      setAgainShow(true);\n      setResult(true);\n    }\n  };\n\n  const playFunc = () => {\n    setCount(0);\n    setResult(false);\n    setAgainShow(false);\n\n    setRandQue(quiz_que[Math.floor(Math.random() * quiz_que.length)]);\n  };\n  return (\n    <div>\n      <div>\n        {againShow ? (\n          \" \"\n        ) : (\n          <div>\n            <h2 id=\"h2\">ðŸ‘‡ Your question is this ðŸ‘‡</h2>\n            <img className=\"img\" src={randQue.image} />\n            <h2>Options are here</h2>\n            {randQue.options.map((obt, index) => {\n              return (\n                <button\n                  className=\"user-input obt\"\n                  onClick={() => obt_func(index, randQue.ans)}\n                >\n                  {obt}\n                </button>\n              );\n            })}\n          </div>\n        )}\n        {result ? (\n          <div>\n            <h2>\n              <button className=\"user-input\">Result</button> <br /> Wrong ={\" \"}\n              {wrong}\n              <p>UserName = {username.username.username}</p>\n              <p>Date = {(username.username.date).slice(0,10)}</p>\n            </h2>\n            <button className=\"user-input\" onClick={playFunc}>\n              Play Again\n            </button>\n          </div>\n        ) : (\n          \" \"\n        )}\n        {value ? <h2>Wrong answer Please choose another option </h2> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Display_que from \"./Display_que\";\nimport quiz_que from \"./quiz_que.json\";\nimport axios from \"axios\";\n\nexport default function User_welcome() {\n  const [userName, setUserName] = useState('');\n  const [content, setContent] = useState(false);\n  const [showQue, setShowQue] = useState(false);\n  const [disableInput, setDisableInput] = useState(true);\n\n  useEffect(() => {\n    const items = [];\n    const objValues = [];\n    for (var i = 0; i < 5; i++) {\n      var randomElement = Math.floor(Math.random() * quiz_que.length);\n      if (items.indexOf(randomElement) > -1) {\n        i = i - 1;\n      } else {\n        items.push(randomElement);\n        objValues.push(quiz_que[randomElement]);\n      }\n    }\n  }, []);\n\n  const showQueFunc = () => {\n    setContent(false);\n    setShowQue(true);\n  };\n  const clickFunc = () => {\n    var today = Date.now()\n    axios\n      .post(\"http://localhost:3001/data\", {\n        username: userName,\n        date: today,\n      })\n      .then((data) =>  setUserName(data.data));\n    setContent(true);\n    setDisableInput(false);\n    \n  };\n  // console.log(userName,showQue,\"userNam\")\n  return (\n    <div className=\"contanier\">\n      {disableInput ? (\n        <div>\n          <input\n            type=\"text\"\n            className=\"user-input\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            placeholder=\"Write your name...\"\n          />\n          <button className=\"user-input\" onClick={clickFunc}>\n            Click\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {userName && content ? (\n        <div>\n          <h1>Welcome {userName.username} For Picture Quiz Game</h1>\n          <p id=\"para\">\n            {\" \"}\n            This game for kid, By playing this game kid can learn easily animals\n            name. If you want to play this game so click this button{\" \"}\n          </p>\n          <p id=\"para\">ðŸ‘‡ðŸ‘‡</p>\n          <button className=\"user-input\" onClick={showQueFunc}>\n            Click here\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {showQue ? <Display_que username = {userName}/> : \"\"}\n    </div>\n  );\n}\n","\nimport './App.css';\nimport User_welcome from './components/User_welcome';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <User_welcome />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}